From 788c78b4310d2562b2c4818841ec2e0bdb803574 Mon Sep 17 00:00:00 2001
From: qianlongxu <qianlongxu@gmail.com>
Date: Mon, 11 Nov 2024 18:08:22 +0800
Subject: [PATCH] fix smb2 not allow longer than 1024 characters question

---
 lib/init.c | 36 ++++++++++++++++++++++--------------
 1 file changed, 22 insertions(+), 14 deletions(-)

diff --git a/lib/init.c b/lib/init.c
index ed9d49b..527099c 100644
--- a/lib/init.c
+++ b/lib/init.c
@@ -181,31 +181,35 @@ smb2_parse_args(struct smb2_context *smb2, const char *args)
 struct smb2_url *smb2_parse_url(struct smb2_context *smb2, const char *url)
 {
         struct smb2_url *u;
-        char *ptr, *tmp, str[MAX_URL_SIZE];
+        char *ptr, *tmp, *str = NULL;
         char *args;
 
         if (strncmp(url, "smb://", 6)) {
                 smb2_set_error(smb2, "URL does not start with 'smb://'");
-                return NULL;
-        }
-        if (strlen(url + 6) >= MAX_URL_SIZE) {
-                smb2_set_error(smb2, "URL is too long");
-                return NULL;
-        }
-        strncpy(str, url + 6, MAX_URL_SIZE);
-
+                u = NULL;
+                goto end;
+        }
+        // if (strlen(url + 6) >= MAX_URL_SIZE) {
+        //         smb2_set_error(smb2, "URL is too long");
+        //         return NULL;
+        // }
+        // strncpy(str, url + 6, MAX_URL_SIZE);
+        
+        str = strdup(url + 6);
         args = strchr(str, '?');
         if (args) {
                 *(args++) = '\0';
                 if (smb2_parse_args(smb2, args) != 0) {
-                        return NULL;
+                       u = NULL;
+                       goto end;
                 }
         }
 
         u = calloc(1, sizeof(struct smb2_url));
         if (u == NULL) {
                 smb2_set_error(smb2, "Failed to allocate smb2_url");
-                return NULL;
+                u = NULL;
+                goto end;
         }
 
         ptr = str;
@@ -213,7 +217,8 @@ struct smb2_url *smb2_parse_url(struct smb2_context *smb2, const char *url)
         char *shared_folder = strchr(ptr, '/');
         if (!shared_folder) {
                 smb2_set_error(smb2, "Wrong URL format");
-                return NULL;
+                u = NULL;
+                goto end;
         }
         int len_shared_folder = strlen(shared_folder);
 
@@ -242,14 +247,17 @@ struct smb2_url *smb2_parse_url(struct smb2_context *smb2, const char *url)
         /* We only have a share */
         if (tmp == NULL) {
                 u->share = strdup(ptr);
-                return u;
+                goto end;
         }
 
         /* we have both share and object path */
         *(tmp++) = '\0';
         u->share = strdup(ptr);
         u->path = strdup(tmp);
-
+end:
+        if (str){
+          free(str);
+        }
         return u;
 }
 
-- 
2.39.5 (Apple Git-154)

