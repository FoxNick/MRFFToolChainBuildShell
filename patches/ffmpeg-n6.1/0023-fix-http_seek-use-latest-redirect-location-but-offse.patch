From b60ff9ad9b9726355b2a6a0676fbd99a013f5a7f Mon Sep 17 00:00:00 2001
From: qianlongxu <qianlongxu@gmail.com>
Date: Mon, 21 Oct 2024 18:40:30 +0800
Subject: [PATCH 23] fix http_seek use latest redirect location but offset is not
 zero bug

---
 libavformat/http.c | 13 ++++++++++++-
 1 file changed, 12 insertions(+), 1 deletion(-)

diff --git a/libavformat/http.c b/libavformat/http.c
index 06f1bdd..8643aae 100644
--- a/libavformat/http.c
+++ b/libavformat/http.c
@@ -1428,6 +1428,7 @@ static int http_connect(URLContext *h, const char *path, const char *local_path,
     uint64_t off = s->off;
     const char *method;
     int send_expect_100 = 0;
+    int cur_auth_type = s->auth_state.auth_type;
 
     av_bprint_init_for_buffer(&request, s->buffer, sizeof(s->buffer));
 
@@ -1569,9 +1570,17 @@ static int http_connect(URLContext *h, const char *path, const char *local_path,
 
     if (s->new_location)
         s->off = off;
-
     err = (off == s->off) ? 0 : -1;
+
+    //in http_seek_internal func reverted to the original uri,but the s->off is not zero，so err is -1，cause can't goto the 401 authenticate logic.
+    if (err != 0 && cur_auth_type != s->auth_state.auth_type && s->http_code == 401) {
+        av_log(NULL, AV_LOG_ERROR, "http 401 error,need authenticate\n", s->buffer);
+        err = 0;
+    }
 done:
+    if (err != 0) {
+        av_log(NULL, AV_LOG_ERROR, "http error %s\n", s->buffer);
+    }
     av_freep(&authstr);
     av_freep(&proxyauthstr);
     return err;
@@ -1961,6 +1970,8 @@ static int64_t http_seek_internal(URLContext *h, int64_t off, int whence, int fo
             return s->off;
     }
 
+    // http_seek use lasest redirect location, because after redirect, reset the auth_state: `memset(&s->auth_state, 0, sizeof(s->auth_state));`
+    
     /* if the location changed (redirect), revert to the original uri */
     if (strcmp(s->uri, s->location)) {
         char *new_uri;
-- 
2.39.3 (Apple Git-146)

